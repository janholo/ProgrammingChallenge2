// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProgrammingChallenge2.Codecs.Matthid.Protobuf {

  /// <summary>Holder for reflection information generated from messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXNzYWdlcy5wcm90bxItUHJvZ3JhbW1pbmdDaGFsbGVuZ2UyLkNvZGVj",
            "cy5tYXR0aGlkLlByb3RvYnVmIjIKE1N0dXBpZFBoeXNpY2FsVmFsdWUSDQoF",
            "VmFsdWUYASABKAESDAoEVW5pdBgCIAEoCSKVAwoPU3R1cGlkSW9URGV2aWNl",
            "EgwKBE5hbWUYASABKAkSCgoCSWQYAiABKAkSFQoNU3RhdHVzTWVzc2FnZRgD",
            "IAEoCRIXCg9TZWxmQ2hlY2tQYXNzZWQYBCABKAgSGgoSU2VydmljZU1vZGVF",
            "bmFibGVkGAUgASgIEhcKD1VwdGltZUluU2Vjb25kcxgGIAEoBBJUCghQcmVz",
            "c3VyZRgHIAEoCzJCLlByb2dyYW1taW5nQ2hhbGxlbmdlMi5Db2RlY3MubWF0",
            "dGhpZC5Qcm90b2J1Zi5TdHVwaWRQaHlzaWNhbFZhbHVlElcKC1RlbXBlcmF0",
            "dXJlGAggASgLMkIuUHJvZ3JhbW1pbmdDaGFsbGVuZ2UyLkNvZGVjcy5tYXR0",
            "aGlkLlByb3RvYnVmLlN0dXBpZFBoeXNpY2FsVmFsdWUSVAoIRGlzdGFuY2UY",
            "CSABKAsyQi5Qcm9ncmFtbWluZ0NoYWxsZW5nZTIuQ29kZWNzLm1hdHRoaWQu",
            "UHJvdG9idWYuU3R1cGlkUGh5c2ljYWxWYWx1ZSLWAQoST3B0aW1pemVkSW9U",
            "RGV2aWNlEgwKBE5hbWUYASABKAwSCgoCSWQYAiABKAwSFQoNU3RhdHVzTWVz",
            "c2FnZRgDIAEoDBIXCg9TZWxmQ2hlY2tQYXNzZWQYBCABKAgSGgoSU2Vydmlj",
            "ZU1vZGVFbmFibGVkGAUgASgIEiEKGUFkZGl0aW9uYWxVcHRpbWVJblNlY29u",
            "ZHMYBiABKA0SEAoIUHJlc3N1cmUYByABKAISEwoLVGVtcGVyYXR1cmUYCCAB",
            "KAISEAoIRGlzdGFuY2UYCSABKAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue), global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue.Parser, new[]{ "Value", "Unit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidIoTDevice), global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidIoTDevice.Parser, new[]{ "Name", "Id", "StatusMessage", "SelfCheckPassed", "ServiceModeEnabled", "UptimeInSeconds", "Pressure", "Temperature", "Distance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.OptimizedIoTDevice), global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.OptimizedIoTDevice.Parser, new[]{ "Name", "Id", "StatusMessage", "SelfCheckPassed", "ServiceModeEnabled", "AdditionalUptimeInSeconds", "Pressure", "Temperature", "Distance" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StupidPhysicalValue : pb::IMessage<StupidPhysicalValue> {
    private static readonly pb::MessageParser<StupidPhysicalValue> _parser = new pb::MessageParser<StupidPhysicalValue>(() => new StupidPhysicalValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StupidPhysicalValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StupidPhysicalValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StupidPhysicalValue(StupidPhysicalValue other) : this() {
      value_ = other.value_;
      unit_ = other.unit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StupidPhysicalValue Clone() {
      return new StupidPhysicalValue(this);
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 1;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "Unit" field.</summary>
    public const int UnitFieldNumber = 2;
    private string unit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unit {
      get { return unit_; }
      set {
        unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StupidPhysicalValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StupidPhysicalValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (Unit != other.Unit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (Unit.Length != 0) hash ^= Unit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (Unit.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (Unit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StupidPhysicalValue other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      if (other.Unit.Length != 0) {
        Unit = other.Unit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 18: {
            Unit = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StupidIoTDevice : pb::IMessage<StupidIoTDevice> {
    private static readonly pb::MessageParser<StupidIoTDevice> _parser = new pb::MessageParser<StupidIoTDevice>(() => new StupidIoTDevice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StupidIoTDevice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StupidIoTDevice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StupidIoTDevice(StupidIoTDevice other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      statusMessage_ = other.statusMessage_;
      selfCheckPassed_ = other.selfCheckPassed_;
      serviceModeEnabled_ = other.serviceModeEnabled_;
      uptimeInSeconds_ = other.uptimeInSeconds_;
      pressure_ = other.pressure_ != null ? other.pressure_.Clone() : null;
      temperature_ = other.temperature_ != null ? other.temperature_.Clone() : null;
      distance_ = other.distance_ != null ? other.distance_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StupidIoTDevice Clone() {
      return new StupidIoTDevice(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StatusMessage" field.</summary>
    public const int StatusMessageFieldNumber = 3;
    private string statusMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SelfCheckPassed" field.</summary>
    public const int SelfCheckPassedFieldNumber = 4;
    private bool selfCheckPassed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SelfCheckPassed {
      get { return selfCheckPassed_; }
      set {
        selfCheckPassed_ = value;
      }
    }

    /// <summary>Field number for the "ServiceModeEnabled" field.</summary>
    public const int ServiceModeEnabledFieldNumber = 5;
    private bool serviceModeEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ServiceModeEnabled {
      get { return serviceModeEnabled_; }
      set {
        serviceModeEnabled_ = value;
      }
    }

    /// <summary>Field number for the "UptimeInSeconds" field.</summary>
    public const int UptimeInSecondsFieldNumber = 6;
    private ulong uptimeInSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UptimeInSeconds {
      get { return uptimeInSeconds_; }
      set {
        uptimeInSeconds_ = value;
      }
    }

    /// <summary>Field number for the "Pressure" field.</summary>
    public const int PressureFieldNumber = 7;
    private global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue pressure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue Pressure {
      get { return pressure_; }
      set {
        pressure_ = value;
      }
    }

    /// <summary>Field number for the "Temperature" field.</summary>
    public const int TemperatureFieldNumber = 8;
    private global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    /// <summary>Field number for the "Distance" field.</summary>
    public const int DistanceFieldNumber = 9;
    private global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StupidIoTDevice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StupidIoTDevice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (SelfCheckPassed != other.SelfCheckPassed) return false;
      if (ServiceModeEnabled != other.ServiceModeEnabled) return false;
      if (UptimeInSeconds != other.UptimeInSeconds) return false;
      if (!object.Equals(Pressure, other.Pressure)) return false;
      if (!object.Equals(Temperature, other.Temperature)) return false;
      if (!object.Equals(Distance, other.Distance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (SelfCheckPassed != false) hash ^= SelfCheckPassed.GetHashCode();
      if (ServiceModeEnabled != false) hash ^= ServiceModeEnabled.GetHashCode();
      if (UptimeInSeconds != 0UL) hash ^= UptimeInSeconds.GetHashCode();
      if (pressure_ != null) hash ^= Pressure.GetHashCode();
      if (temperature_ != null) hash ^= Temperature.GetHashCode();
      if (distance_ != null) hash ^= Distance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StatusMessage);
      }
      if (SelfCheckPassed != false) {
        output.WriteRawTag(32);
        output.WriteBool(SelfCheckPassed);
      }
      if (ServiceModeEnabled != false) {
        output.WriteRawTag(40);
        output.WriteBool(ServiceModeEnabled);
      }
      if (UptimeInSeconds != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(UptimeInSeconds);
      }
      if (pressure_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Pressure);
      }
      if (temperature_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Temperature);
      }
      if (distance_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Distance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (SelfCheckPassed != false) {
        size += 1 + 1;
      }
      if (ServiceModeEnabled != false) {
        size += 1 + 1;
      }
      if (UptimeInSeconds != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UptimeInSeconds);
      }
      if (pressure_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pressure);
      }
      if (temperature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Temperature);
      }
      if (distance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Distance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StupidIoTDevice other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.SelfCheckPassed != false) {
        SelfCheckPassed = other.SelfCheckPassed;
      }
      if (other.ServiceModeEnabled != false) {
        ServiceModeEnabled = other.ServiceModeEnabled;
      }
      if (other.UptimeInSeconds != 0UL) {
        UptimeInSeconds = other.UptimeInSeconds;
      }
      if (other.pressure_ != null) {
        if (pressure_ == null) {
          Pressure = new global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue();
        }
        Pressure.MergeFrom(other.Pressure);
      }
      if (other.temperature_ != null) {
        if (temperature_ == null) {
          Temperature = new global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue();
        }
        Temperature.MergeFrom(other.Temperature);
      }
      if (other.distance_ != null) {
        if (distance_ == null) {
          Distance = new global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue();
        }
        Distance.MergeFrom(other.Distance);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            StatusMessage = input.ReadString();
            break;
          }
          case 32: {
            SelfCheckPassed = input.ReadBool();
            break;
          }
          case 40: {
            ServiceModeEnabled = input.ReadBool();
            break;
          }
          case 48: {
            UptimeInSeconds = input.ReadUInt64();
            break;
          }
          case 58: {
            if (pressure_ == null) {
              Pressure = new global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue();
            }
            input.ReadMessage(Pressure);
            break;
          }
          case 66: {
            if (temperature_ == null) {
              Temperature = new global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue();
            }
            input.ReadMessage(Temperature);
            break;
          }
          case 74: {
            if (distance_ == null) {
              Distance = new global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.StupidPhysicalValue();
            }
            input.ReadMessage(Distance);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OptimizedIoTDevice : pb::IMessage<OptimizedIoTDevice> {
    private static readonly pb::MessageParser<OptimizedIoTDevice> _parser = new pb::MessageParser<OptimizedIoTDevice>(() => new OptimizedIoTDevice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OptimizedIoTDevice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProgrammingChallenge2.Codecs.Matthid.Protobuf.MessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizedIoTDevice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizedIoTDevice(OptimizedIoTDevice other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      statusMessage_ = other.statusMessage_;
      selfCheckPassed_ = other.selfCheckPassed_;
      serviceModeEnabled_ = other.serviceModeEnabled_;
      additionalUptimeInSeconds_ = other.additionalUptimeInSeconds_;
      pressure_ = other.pressure_;
      temperature_ = other.temperature_;
      distance_ = other.distance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizedIoTDevice Clone() {
      return new OptimizedIoTDevice(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 2;
    private pb::ByteString id_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StatusMessage" field.</summary>
    public const int StatusMessageFieldNumber = 3;
    private pb::ByteString statusMessage_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SelfCheckPassed" field.</summary>
    public const int SelfCheckPassedFieldNumber = 4;
    private bool selfCheckPassed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SelfCheckPassed {
      get { return selfCheckPassed_; }
      set {
        selfCheckPassed_ = value;
      }
    }

    /// <summary>Field number for the "ServiceModeEnabled" field.</summary>
    public const int ServiceModeEnabledFieldNumber = 5;
    private bool serviceModeEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ServiceModeEnabled {
      get { return serviceModeEnabled_; }
      set {
        serviceModeEnabled_ = value;
      }
    }

    /// <summary>Field number for the "AdditionalUptimeInSeconds" field.</summary>
    public const int AdditionalUptimeInSecondsFieldNumber = 6;
    private uint additionalUptimeInSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AdditionalUptimeInSeconds {
      get { return additionalUptimeInSeconds_; }
      set {
        additionalUptimeInSeconds_ = value;
      }
    }

    /// <summary>Field number for the "Pressure" field.</summary>
    public const int PressureFieldNumber = 7;
    private float pressure_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Pressure {
      get { return pressure_; }
      set {
        pressure_ = value;
      }
    }

    /// <summary>Field number for the "Temperature" field.</summary>
    public const int TemperatureFieldNumber = 8;
    private float temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    /// <summary>Field number for the "Distance" field.</summary>
    public const int DistanceFieldNumber = 9;
    private float distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OptimizedIoTDevice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OptimizedIoTDevice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (SelfCheckPassed != other.SelfCheckPassed) return false;
      if (ServiceModeEnabled != other.ServiceModeEnabled) return false;
      if (AdditionalUptimeInSeconds != other.AdditionalUptimeInSeconds) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pressure, other.Pressure)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Temperature, other.Temperature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (SelfCheckPassed != false) hash ^= SelfCheckPassed.GetHashCode();
      if (ServiceModeEnabled != false) hash ^= ServiceModeEnabled.GetHashCode();
      if (AdditionalUptimeInSeconds != 0) hash ^= AdditionalUptimeInSeconds.GetHashCode();
      if (Pressure != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pressure);
      if (Temperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Temperature);
      if (Distance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Id);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(StatusMessage);
      }
      if (SelfCheckPassed != false) {
        output.WriteRawTag(32);
        output.WriteBool(SelfCheckPassed);
      }
      if (ServiceModeEnabled != false) {
        output.WriteRawTag(40);
        output.WriteBool(ServiceModeEnabled);
      }
      if (AdditionalUptimeInSeconds != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(AdditionalUptimeInSeconds);
      }
      if (Pressure != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Pressure);
      }
      if (Temperature != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Temperature);
      }
      if (Distance != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Distance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StatusMessage);
      }
      if (SelfCheckPassed != false) {
        size += 1 + 1;
      }
      if (ServiceModeEnabled != false) {
        size += 1 + 1;
      }
      if (AdditionalUptimeInSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AdditionalUptimeInSeconds);
      }
      if (Pressure != 0F) {
        size += 1 + 4;
      }
      if (Temperature != 0F) {
        size += 1 + 4;
      }
      if (Distance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OptimizedIoTDevice other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.SelfCheckPassed != false) {
        SelfCheckPassed = other.SelfCheckPassed;
      }
      if (other.ServiceModeEnabled != false) {
        ServiceModeEnabled = other.ServiceModeEnabled;
      }
      if (other.AdditionalUptimeInSeconds != 0) {
        AdditionalUptimeInSeconds = other.AdditionalUptimeInSeconds;
      }
      if (other.Pressure != 0F) {
        Pressure = other.Pressure;
      }
      if (other.Temperature != 0F) {
        Temperature = other.Temperature;
      }
      if (other.Distance != 0F) {
        Distance = other.Distance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
          case 18: {
            Id = input.ReadBytes();
            break;
          }
          case 26: {
            StatusMessage = input.ReadBytes();
            break;
          }
          case 32: {
            SelfCheckPassed = input.ReadBool();
            break;
          }
          case 40: {
            ServiceModeEnabled = input.ReadBool();
            break;
          }
          case 48: {
            AdditionalUptimeInSeconds = input.ReadUInt32();
            break;
          }
          case 61: {
            Pressure = input.ReadFloat();
            break;
          }
          case 69: {
            Temperature = input.ReadFloat();
            break;
          }
          case 77: {
            Distance = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
